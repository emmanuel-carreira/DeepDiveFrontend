{"ast":null,"code":"import _slicedToArray from \"/home/CIN/eca2/workshop-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/CIN/eca2/workshop-frontend/src/UserList/UserDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchRepos } from 'dataLayer';\nimport Loading from 'Shared/Loading';\n/*\n  INSTRUCTIONS (TODO):\n\n  1. Usar o usuário passado parar consultar os repositorios deste usuários e listá-los dinamicamente.\n\n  OBS:\n  Além de listar os usuários, precisamos que este componente tenha mais 2 estados:\n  - Loading: Quando estiver esperando pelo resultado da consulta, exibir o componente de <Loading />\n  - Se o usuário não contiver nenhum repositório na sua lista: Exibir mensagem: \"No repos found\"\n\n*/\n\nconst UserDetails = ({\n  user\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchRepo = _useState2[0],\n        setSearchRepo = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    setLoading(true);\n    fetchRepos(user.login).then(userRepos => {\n      setSearchRepo(userRepos), setLoading(false);\n    });\n  }, []);\n  return React.createElement(\"ul\", {\n    className: \"list pa2 overflow-y-auto h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, repos.map(repo => React.createElement(\"li\", {\n    key: repo.name,\n    className: \"f7 truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, repo.name)));\n};\n\nexport default UserDetails;","map":{"version":3,"sources":["/home/CIN/eca2/workshop-frontend/src/UserList/UserDetails.js"],"names":["React","useState","useEffect","fetchRepos","Loading","UserDetails","user","searchRepo","setSearchRepo","loading","setLoading","login","then","userRepos","repos","map","repo","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA;;;;;;;;;;;;AAYA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,oBAEIL,QAAQ,CAAC,EAAD,CAFZ;AAAA;AAAA,QAEzBM,UAFyB;AAAA,QAEbC,aAFa;;AAAA,qBAGFP,QAAQ,CAAC,KAAD,CAHN;AAAA;AAAA,QAGzBQ,OAHyB;AAAA,QAGhBC,UAHgB;;AAKhCR,EAAAA,SAAS,CAAC,MAAM;AAEdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAP,IAAAA,UAAU,CAACG,IAAI,CAACK,KAAN,CAAV,CAAuBC,IAAvB,CAA4BC,SAAS,IAAI;AAEvCL,MAAAA,aAAa,CAACK,SAAD,CAAb,EAA0BH,UAAU,CAAC,KAAD,CAApC;AACC,KAHH;AAKC,GATM,EASJ,EATI,CAAT;AAaA,SAEG;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACII,KAAK,CAACC,GAAN,CAAUC,IAAI,IACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAoB,IAAA,SAAS,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACC,IADR,CADC,CADJ,CAFH;AAUD,CA5BD;;AA8BA,eAAeZ,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { fetchRepos } from 'dataLayer'\nimport Loading from 'Shared/Loading'\n\n/*\n  INSTRUCTIONS (TODO):\n\n  1. Usar o usuário passado parar consultar os repositorios deste usuários e listá-los dinamicamente.\n\n  OBS:\n  Além de listar os usuários, precisamos que este componente tenha mais 2 estados:\n  - Loading: Quando estiver esperando pelo resultado da consulta, exibir o componente de <Loading />\n  - Se o usuário não contiver nenhum repositório na sua lista: Exibir mensagem: \"No repos found\"\n\n*/\n\nconst UserDetails = ({ user }) => {\n  \n  const [searchRepo, setSearchRepo] = useState([])\n  const [loading, setLoading] = useState(false) \n\n  useEffect(() => {\n\n    setLoading(true)\n\n    fetchRepos(user.login).then(userRepos => {\n      \n      setSearchRepo(userRepos), setLoading(false)\n      })\n\n    }, [])\n  \n  \n\n  return (\n    \n     <ul className=\"list pa2 overflow-y-auto h4\">\n        {repos.map(repo => (\n        <li key={repo.name} className=\"f7 truncate\">\n          {repo.name}\n        </li>\n        ))}\n     </ul>\n  )\n}\n\nexport default UserDetails\n"]},"metadata":{},"sourceType":"module"}