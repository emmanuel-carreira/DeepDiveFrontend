{"ast":null,"code":"var _jsxFileName = \"/home/CIN/eca2/workshop-frontend/src/UserList/UserDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchRepos } from 'dataLayer';\nimport Loading from 'Shared/Loading';\n/*\n  INSTRUCTIONS (TODO):\n\n  1. Usar o usuário passado parar consultar os repositorios deste usuários e listá-los dinamicamente.\n\n  OBS:\n  Além de listar os usuários, precisamos que este componente tenha mais 2 estados:\n  - Loading: Quando estiver esperando pelo resultado da consulta, exibir o componente de <Loading />\n  - Se o usuário não contiver nenhum repositório na sua lista: Exibir mensagem: \"No repos found\"\n\n*/\n\nconst UserDetails = ({\n  user\n}) => {\n  return React.createElement(\"ul\", {\n    className: \"list pa2 overflow-y-auto h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"f7 truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Repo 1\"), React.createElement(\"li\", {\n    className: \"f7 truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Repo 2\"), React.createElement(\"li\", {\n    className: \"f7 truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Repo 3\"), React.createElement(\"li\", {\n    className: \"f7 truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Repo 4\"));\n};\n\nexport default UserDetails;","map":{"version":3,"sources":["/home/CIN/eca2/workshop-frontend/src/UserList/UserDetails.js"],"names":["React","useState","useEffect","fetchRepos","Loading","UserDetails","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA;;;;;;;;;;;;AAYA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,SACE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { fetchRepos } from 'dataLayer'\nimport Loading from 'Shared/Loading'\n\n/*\n  INSTRUCTIONS (TODO):\n\n  1. Usar o usuário passado parar consultar os repositorios deste usuários e listá-los dinamicamente.\n\n  OBS:\n  Além de listar os usuários, precisamos que este componente tenha mais 2 estados:\n  - Loading: Quando estiver esperando pelo resultado da consulta, exibir o componente de <Loading />\n  - Se o usuário não contiver nenhum repositório na sua lista: Exibir mensagem: \"No repos found\"\n\n*/\n\nconst UserDetails = ({ user }) => {\n  return (\n    <ul className=\"list pa2 overflow-y-auto h4\">\n      <li className=\"f7 truncate\">Repo 1</li>\n      <li className=\"f7 truncate\">Repo 2</li>\n      <li className=\"f7 truncate\">Repo 3</li>\n      <li className=\"f7 truncate\">Repo 4</li>\n    </ul>\n  )\n}\n\nexport default UserDetails\n"]},"metadata":{},"sourceType":"module"}