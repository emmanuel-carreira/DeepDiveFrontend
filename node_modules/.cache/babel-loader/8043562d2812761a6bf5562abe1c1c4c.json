{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { fetchRepos } from 'dataLayer';\nimport Loading from 'Shared/Loading';\n/*\n  INSTRUCTIONS (TODO):\n\n  1. Usar o usuário passado parar consultar os repositorios deste usuários e listá-los dinamicamente.\n\n  OBS:\n  Além de listar os usuários, precisamos que este componente tenha mais 2 estados:\n  - Loading: Quando estiver esperando pelo resultado da consulta, exibir o componente de <Loading />\n  - Se o usuário não contiver nenhum repositório na sua lista: Exibir mensagem: \"No repos found\"\n\n*/\n\nconst UserDetails = ({\n  user\n}) => {\n  fetchRepos(user).then(userRepos => onResult({\n    loading: false,\n    data: userRepos\n  }));\n  /*\n    return (\n      <ul className=\"list pa2 overflow-y-auto h4\">\n        <li className=\"f7 truncate\">Repo 1</li>\n        <li className=\"f7 truncate\">Repo 2</li>\n        <li className=\"f7 truncate\">Repo 3</li>\n        <li className=\"f7 truncate\">Repo 4</li>\n      </ul>\n    )*/\n};\n\nexport default UserDetails;","map":{"version":3,"sources":["/home/CIN/eca2/workshop-frontend/src/UserList/UserDetails.js"],"names":["React","useState","useEffect","fetchRepos","Loading","UserDetails","user","then","userRepos","onResult","loading","data"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA;;;;;;;;;;;;AAYA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEhCH,EAAAA,UAAU,CAACG,IAAD,CAAV,CAAiBC,IAAjB,CAAsBC,SAAS,IAC7BC,QAAQ,CAAC;AACPC,IAAAA,OAAO,EAAE,KADF;AAEPC,IAAAA,IAAI,EAAEH;AAFC,GAAD,CADV;AAOF;;;;;;;;;AASC,CAlBD;;AAoBA,eAAeH,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { fetchRepos } from 'dataLayer'\nimport Loading from 'Shared/Loading'\n\n/*\n  INSTRUCTIONS (TODO):\n\n  1. Usar o usuário passado parar consultar os repositorios deste usuários e listá-los dinamicamente.\n\n  OBS:\n  Além de listar os usuários, precisamos que este componente tenha mais 2 estados:\n  - Loading: Quando estiver esperando pelo resultado da consulta, exibir o componente de <Loading />\n  - Se o usuário não contiver nenhum repositório na sua lista: Exibir mensagem: \"No repos found\"\n\n*/\n\nconst UserDetails = ({ user }) => {\n  \n  fetchRepos(user).then(userRepos =>\n    onResult({\n      loading: false,\n      data: userRepos\n    })\n    \n    )\n/*\n  return (\n    <ul className=\"list pa2 overflow-y-auto h4\">\n      <li className=\"f7 truncate\">Repo 1</li>\n      <li className=\"f7 truncate\">Repo 2</li>\n      <li className=\"f7 truncate\">Repo 3</li>\n      <li className=\"f7 truncate\">Repo 4</li>\n    </ul>\n  )*/\n}\n\nexport default UserDetails\n"]},"metadata":{},"sourceType":"module"}